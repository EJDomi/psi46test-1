// RPC functions
// created: 16.07.2013 14:26:50
// This is an auto generated file
// *** DO NOT EDIT THIS FILE ***

#include "pixel_dtb.h"

const char CTestboard::rpc_timestamp[] = "16.07.2013 14:26:50";

const unsigned int CTestboard::rpc_cmdListSize = 71;

const char *CTestboard::rpc_cmdName[] =
{
	/*     0 */ "GetRpcVersion$S",
	/*     1 */ "GetRpcCallId$i3c",
	/*     2 */ "GetRpcTimestamp$v4c",
	/*     3 */ "GetInfo$v4c",
	/*     4 */ "GetBoardId$S",
	/*     5 */ "GetHWVersion$v4c",
	/*     6 */ "GetFWVersion$S",
	/*     7 */ "GetSWVersion$S",
	/*     8 */ "UpgradeGetVersion$S",
	/*     9 */ "UpgradeStart$CS",
	/*    10 */ "UpgradeData$C3c",
	/*    11 */ "UpgradeError$C",
	/*    12 */ "UpgradeErrorMsg$v4c",
	/*    13 */ "UpgradeExec$vS",
	/*    14 */ "Init$v",
	/*    15 */ "Welcome$v",
	/*    16 */ "SetLed$vC",
	/*    17 */ "cDelay$vS",
	/*    18 */ "uDelay$vS",
	/*    19 */ "Sig_SetMode$vCC",
	/*    20 */ "Sig_SetPRBS$vCC",
	/*    21 */ "Sig_SetDelay$vCSc",
	/*    22 */ "Sig_SetLevel$vCC",
	/*    23 */ "Sig_SetOffset$vC",
	/*    24 */ "Sig_SetLVDS$v",
	/*    25 */ "Sig_SetLCDS$v",
	/*    26 */ "SignalProbeD1$vC",
	/*    27 */ "SignalProbeD2$vC",
	/*    28 */ "SignalProbeA1$vC",
	/*    29 */ "SignalProbeA2$vC",
	/*    30 */ "SignalProbeADC$vCC",
	/*    31 */ "Pon$v",
	/*    32 */ "Poff$v",
	/*    33 */ "_SetVD$vS",
	/*    34 */ "_SetVA$vS",
	/*    35 */ "_SetID$vS",
	/*    36 */ "_SetIA$vS",
	/*    37 */ "_GetVD$S",
	/*    38 */ "_GetVA$S",
	/*    39 */ "_GetID$S",
	/*    40 */ "_GetIA$S",
	/*    41 */ "HVon$v",
	/*    42 */ "HVoff$v",
	/*    43 */ "ResetOn$v",
	/*    44 */ "ResetOff$v",
	/*    45 */ "GetStatus$C",
	/*    46 */ "SetRocAddress$vC",
	/*    47 */ "Pg_SetCmd$vSS",
	/*    48 */ "Pg_Stop$v",
	/*    49 */ "Pg_Single$v",
	/*    50 */ "Pg_Trigger$v",
	/*    51 */ "Pg_Loop$vS",
	/*    52 */ "GetUser1Version$S",
	/*    53 */ "Daq_Open$II",
	/*    54 */ "Daq_Close$v",
	/*    55 */ "Daq_Start$v",
	/*    56 */ "Daq_Stop$v",
	/*    57 */ "Daq_GetSize$I",
	/*    58 */ "Daq_Read$C2S0IS",
	/*    59 */ "Daq_Select_ADC$vSCCC",
	/*    60 */ "Daq_Select_Deser160$vC",
	/*    61 */ "roc_I2cAddr$vC",
	/*    62 */ "roc_ClrCal$v",
	/*    63 */ "roc_SetDAC$vCC",
	/*    64 */ "roc_Pix$vCCC",
	/*    65 */ "roc_Pix_Trim$vCCC",
	/*    66 */ "roc_Pix_Mask$vCC",
	/*    67 */ "roc_Pix_Cal$vCCb",
	/*    68 */ "roc_Col_Enable$vCb",
	/*    69 */ "roc_Col_Mask$vC",
	/*    70 */ "roc_Chip_Mask$v"
};

uint16_t CTestboard::GetRpcVersion()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(0);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

int32_t CTestboard::GetRpcCallId(string &rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(1);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_Send(*rpc_io, rpc_par1);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,4);
	int32_t rpc_par0 = msg.Get_INT32();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

void CTestboard::GetRpcTimestamp(stringR &rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(2);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,0);
	rpc_Receive(*rpc_io, rpc_par1);
	RPC_THREAD_UNLOCK
}

void CTestboard::GetInfo(stringR &rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(3);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,0);
	rpc_Receive(*rpc_io, rpc_par1);
	RPC_THREAD_UNLOCK
}

uint16_t CTestboard::GetBoardId()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(4);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

void CTestboard::GetHWVersion(stringR &rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(5);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,0);
	rpc_Receive(*rpc_io, rpc_par1);
	RPC_THREAD_UNLOCK
}

uint16_t CTestboard::GetFWVersion()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(6);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint16_t CTestboard::GetSWVersion()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(7);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint16_t CTestboard::UpgradeGetVersion()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(8);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint8_t CTestboard::UpgradeStart(uint16_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(9);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,1);
	uint8_t rpc_par0 = msg.Get_UINT8();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint8_t CTestboard::UpgradeData(string &rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(10);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_Send(*rpc_io, rpc_par1);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,1);
	uint8_t rpc_par0 = msg.Get_UINT8();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint8_t CTestboard::UpgradeError()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(11);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,1);
	uint8_t rpc_par0 = msg.Get_UINT8();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

void CTestboard::UpgradeErrorMsg(stringR &rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(12);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,0);
	rpc_Receive(*rpc_io, rpc_par1);
	RPC_THREAD_UNLOCK
}

void CTestboard::UpgradeExec(uint16_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(13);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Init()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(14);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Welcome()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(15);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::SetLed(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(16);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::cDelay(uint16_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(17);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::uDelay(uint16_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(18);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Sig_SetMode(uint8_t rpc_par1, uint8_t rpc_par2)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(19);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Sig_SetPRBS(uint8_t rpc_par1, uint8_t rpc_par2)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(20);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Sig_SetDelay(uint8_t rpc_par1, uint16_t rpc_par2, int8_t rpc_par3)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(21);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT16(rpc_par2);
	msg.Put_INT8(rpc_par3);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Sig_SetLevel(uint8_t rpc_par1, uint8_t rpc_par2)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(22);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Sig_SetOffset(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(23);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Sig_SetLVDS()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(24);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Sig_SetLCDS()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(25);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::SignalProbeD1(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(26);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::SignalProbeD2(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(27);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::SignalProbeA1(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(28);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::SignalProbeA2(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(29);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::SignalProbeADC(uint8_t rpc_par1, uint8_t rpc_par2)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(30);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Pon()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(31);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Poff()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(32);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::_SetVD(uint16_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(33);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::_SetVA(uint16_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(34);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::_SetID(uint16_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(35);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::_SetIA(uint16_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(36);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

uint16_t CTestboard::_GetVD()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(37);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint16_t CTestboard::_GetVA()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(38);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint16_t CTestboard::_GetID()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(39);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint16_t CTestboard::_GetIA()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(40);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

void CTestboard::HVon()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(41);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::HVoff()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(42);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::ResetOn()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(43);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::ResetOff()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(44);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

uint8_t CTestboard::GetStatus()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(45);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,1);
	uint8_t rpc_par0 = msg.Get_UINT8();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

void CTestboard::SetRocAddress(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(46);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Pg_SetCmd(uint16_t rpc_par1, uint16_t rpc_par2)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(47);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Put_UINT16(rpc_par2);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Pg_Stop()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(48);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Pg_Single()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(49);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Pg_Trigger()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(50);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Pg_Loop(uint16_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(51);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

uint16_t CTestboard::GetUser1Version()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(52);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,2);
	uint16_t rpc_par0 = msg.Get_UINT16();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint32_t CTestboard::Daq_Open(uint32_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(53);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT32(rpc_par1);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,4);
	uint32_t rpc_par0 = msg.Get_UINT32();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

void CTestboard::Daq_Close()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(54);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Daq_Start()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(55);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Daq_Stop()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(56);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

uint32_t CTestboard::Daq_GetSize()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(57);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,4);
	uint32_t rpc_par0 = msg.Get_UINT32();
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

uint8_t CTestboard::Daq_Read(vectorR<uint16_t> &rpc_par1, uint32_t &rpc_par2, uint16_t rpc_par3)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(58);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT32(rpc_par2);
	msg.Put_UINT16(rpc_par3);
	msg.Send(*rpc_io);
	rpc_io->Flush();
	msg.Receive(*rpc_io);
	msg.Check(rpc_clientCallId,5);
	uint8_t rpc_par0 = msg.Get_UINT8();
	rpc_par2 = msg.Get_UINT32();
	rpc_Receive(*rpc_io, rpc_par1);
	RPC_THREAD_UNLOCK
	return rpc_par0;
}

void CTestboard::Daq_Select_ADC(uint16_t rpc_par1, uint8_t rpc_par2, uint8_t rpc_par3, uint8_t rpc_par4)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(59);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT16(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Put_UINT8(rpc_par3);
	msg.Put_UINT8(rpc_par4);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::Daq_Select_Deser160(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(60);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_I2cAddr(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(61);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_ClrCal()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(62);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_SetDAC(uint8_t rpc_par1, uint8_t rpc_par2)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(63);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_Pix(uint8_t rpc_par1, uint8_t rpc_par2, uint8_t rpc_par3)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(64);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Put_UINT8(rpc_par3);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_Pix_Trim(uint8_t rpc_par1, uint8_t rpc_par2, uint8_t rpc_par3)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(65);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Put_UINT8(rpc_par3);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_Pix_Mask(uint8_t rpc_par1, uint8_t rpc_par2)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(66);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_Pix_Cal(uint8_t rpc_par1, uint8_t rpc_par2, bool rpc_par3)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(67);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_UINT8(rpc_par2);
	msg.Put_BOOL(rpc_par3);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_Col_Enable(uint8_t rpc_par1, bool rpc_par2)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(68);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Put_BOOL(rpc_par2);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_Col_Mask(uint8_t rpc_par1)
{
	uint16_t rpc_clientCallId = rpc_GetCallId(69);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Put_UINT8(rpc_par1);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

void CTestboard::roc_Chip_Mask()
{
	uint16_t rpc_clientCallId = rpc_GetCallId(70);
	RPC_THREAD_LOCK
	rpcMessage msg;
	msg.Create(rpc_clientCallId);
	msg.Send(*rpc_io);
	RPC_THREAD_UNLOCK
}

